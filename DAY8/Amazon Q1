#In the stock market, a person buys a stock and sells it on some future date. Given the stock prices of N days in an array A[ ] and a positive integer K, 
find out the maximum profit a person can make in at-most K transactions.
A transaction is equivalent to (buying + selling) of a stock and new transaction can start only when the previous transaction has been completed.


class Solution {
  public:
    int maxProfit(int k, int n, int a[]) 
    {
        // code here
        int dp[k+1][n];
        for(int i=0;i<=k;i++)
           dp[i][0]=0;
           
        for(int j=0;j<n;j++)
           dp[0][j]=0;
           
        for(int i=1;i<=k;i++)
        {
            int m=INT_MIN;
            for(int j=1;j<n;j++)
            {
                m=max(m,dp[i-1][j-1]-a[j-1]);
                dp[i][j]=max(dp[i][j-1],m+a[j]);
            }
        }
        return dp[k][n-1];
    }
};
